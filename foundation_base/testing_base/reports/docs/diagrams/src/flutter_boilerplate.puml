@startuml flutter_boilerplate
set namespaceSeparator ::

class "flutter_boilerplate::app::screens::myhomepage::my_home_page.dart::MyHomePage" {
  +dynamic title
  +dynamic message
  {static} +Key titleKey
  {static} +Key messageKey
  +MyHomePageState createState()
}

"flutter_boilerplate::app::screens::myhomepage::my_home_page.dart::MyHomePage" o-- "flutter::src::foundation::key.dart::Key"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "flutter_boilerplate::app::screens::myhomepage::my_home_page.dart::MyHomePage"

class "flutter_boilerplate::app::screens::myhomepage::my_home_page_state.dart::MyHomePageState" {
  +void incrementCounter()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "flutter_boilerplate::app::screens::myhomepage::my_home_page_state.dart::MyHomePageState"
"flutter_boilerplate::app::screens::myhomepage::statecontroller::counter_store_mixin.dart::CounterStoreMixin" <|-- "flutter_boilerplate::app::screens::myhomepage::my_home_page_state.dart::MyHomePageState"

class "flutter_boilerplate::app::screens::myhomepage::statecontroller::counter_store_mixin.dart::CounterStoreMixin" {
  {static} -int _counter
  +int myCounter
  +int increaseCounter()
}

class "flutter_boilerplate::app::screens::my_app.dart::MyApp" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "flutter_boilerplate::app::screens::my_app.dart::MyApp"

abstract class "flutter_boilerplate::app::shared::logger_types.dart::UiLogger" {
  +Logger logger
}

"flutter_boilerplate::app::shared::logger_types.dart::UiLogger" o-- "logging::src::logger.dart::Logger"

abstract class "flutter_boilerplate::app::shared::logger_types.dart::NetworkLogger" {
  +Logger logger
}

"flutter_boilerplate::app::shared::logger_types.dart::NetworkLogger" o-- "logging::src::logger.dart::Logger"

abstract class "flutter_boilerplate::app::shared::logger_types.dart::UtilityLogger" {
  +Logger logger
}

"flutter_boilerplate::app::shared::logger_types.dart::UtilityLogger" o-- "logging::src::logger.dart::Logger"

class "flutter_boilerplate::app::shared::log_exception.dart::LogException" {
  +String message
  +StackTrace stackTrace
  +Zone zone
  +DateTime time
  +int level
  +Object cause
}

"flutter_boilerplate::app::shared::log_exception.dart::LogException" o-- "dart::async::Zone"

abstract class "flutter_boilerplate::app::shared::types.dart::LoggerType" {
  +Logger logger
}

"flutter_boilerplate::app::shared::types.dart::LoggerType" o-- "logging::src::logger.dart::Logger"


@enduml